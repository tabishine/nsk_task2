@model List<task2.Models.HierarchicalItem>
<h2>Hierarchical Items</h2>

<ul id="itemList">
    @foreach (var rootItem in Model)
    {
        <li>
            <button class="toggle" data-id="@rootItem.ID" data-expanded="true">+</button>
            <span class="item-name">@rootItem.NAME</span>
            <button class="edit" data-id="@rootItem.ID">Редактировать</button>
            <button class="add-child" data-id="@rootItem.ID">Добавить значение</button>
            <button class="delete-root" data-id="@rootItem.ID">Удалить корень</button>
            <ul class="child-items hidden">
                @foreach (var childItem in rootItem.Children)
                {
                    <li>
                        <span class="item-name">@childItem.NAME</span>
                        <button class="edit-child" data-id="@childItem.ID">Редактировать</button>
                        <button class="delete-child" data-parent-id="@rootItem.ID" data-id="@childItem.ID">Удалить значение</button>
                    </li>
                }
            </ul>
        </li>
    }
</ul>

<button class="add-hierarchy">Добавить иерархию</button>

<div id="myModalEdit" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Редактировать</h2>
        <form id="itemFormEdit" method="post">
            <input type="hidden" id="itemIdEdit" name="ID" />
            <input type="text" id="itemNameEdit" name="NAME" placeholder="Item Name" required />
            <select id="parentItemEdit" name="PARENTID">
                <option value="">None</option>
                @foreach (var item in Model)
                {
                    <option value="@item.ID">@item.NAME</option>
                }
            </select>
            <button type="submit" id="saveButtonEdit">Сохранить</button>
        </form>
    </div>
</div>

<div id="myModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Добавить</h2>
        <form id="itemForm" method="post">
            <input type="hidden" id="itemId" name="ID" />
            <input type="text" id="itemName" name="NAME" placeholder="Item Name" required />
            <select id="parentItem" name="PARENTID">
                <option value="">None</option>
                @foreach (var item in Model)
                {
                    <option value="@item.ID">@item.NAME</option>
                }
            </select>
            <button type="submit" id="saveButton">Сохранить</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>$(document).ready(function () {

    $(".child-items").hide();

    $(".toggle").on("click", function () {
        var itemId = $(this).data("id");
        var expanded = $(this).data("expanded");
        var $childItems = $(this).siblings(".child-items");

        if (expanded === "false") {
            $(this).data("expanded", "true");
            $childItems.show();
            $(this).text("-");
        } else {
            $(this).data("expanded", "false");
            $childItems.hide();
            $(this).text("+");
        }
    });

    $("#addItemButton").on("click", function () {
                $("#itemId").val("");
                $("#itemName").val("");
                $("#parentItem").val("");
                $("#myModal").show();
            });

    $("#itemFormEdit").submit(function (e) {
        e.preventDefault();
        var formData = $(this).serializeArray();

        $.post("/Home/EditItem", formData, function (response) {
            if (response.success) {
                var itemId = formData.find(item => item.name === "ID").value;
                var itemName = formData.find(item => item.name === "NAME").value;

                $("#itemList li[data-id='" + itemId + "'] .item-name").text(itemName);
                $("#myModalEdit").hide();
            } else {
            }
        });
    });


    // Редактирование элемента
    $(".edit").on("click", function () {
        var itemId = $(this).data("id");

        $.ajax({
            url: "/Home/GetItemForEdit",
            type: "POST",
            data: { itemId: itemId },
            dataType: "json",
            success: function (item) {
                if (item) {
                    $("#itemIdEdit").val(item.ID);
                    $("#itemNameEdit").val(item.NAME);
                    $("#parentItemEdit").val(item.PARENTID);
                    $("#myModalEdit").show();
                }
            },
            error: function () {
                // Обработка ошибки
            }
        });
    });



            // Закрытие модального окна редактирования при нажатии на крестик
            $(".modal-content .close").on("click", function () {
                $("#myModalEdit").hide();
            });

            // Отправка данных формы редактирования
            $("#itemFormEdit").submit(function (e) {
                e.preventDefault();
                var formData = $(this).serializeArray();
                $.post("/Home/EditItem", formData, function () {
                    location.reload();
                });
            });

            $(".add-child").on("click", function () {
                var itemId = $(this).data("id");
                $("#parentItem").val(itemId);
                $("#itemId").val("");
                $("#itemName").val("");
                $("#myModal").show();
            });


            $(".add-hierarchy").on("click", function () {
                var itemId = $(this).data("id");
                $("#parentItem").val(itemId);
                $("#itemId").val("");
                $("#itemName").val("");
                $("#myModal").show();
            });


            $(".close").on("click", function () {
                $("#myModal").hide();
            });

            $("#itemForm").submit(function (e) {
                e.preventDefault();
                var formData = $(this).serializeArray();
                $.post("/Home/AddItem", formData, function () {
                    location.reload();
                });
            });

    $(".delete-root").on("click", function () {
        var itemId = $(this).data("id");
        $(this).parent().remove();
    });

            $(".delete-child").on("click", function () {
                var parentId = $(this).data("parent-id");
                var childId = $(this).data("id");
                $.post("/Home/DeleteChildItem", { parentId: parentId, childId: childId }, function () {
                    location.reload();
                });
            });


        });</script>
}
